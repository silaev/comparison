buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}

}

plugins {
	id "io.franzbecker.gradle-lombok" version "1.14"
	id 'com.sourcemuse.mongo' version '1.0.6'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.silaev.comparison'
version = '0.0.2-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

springBoot {
	mainClassName = 'com.silaev.comparison.ComparisonApplication'
}

task integrationTest(type: Test) {
	runWithMongoDb = true
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	runtimeOnly('org.springframework.boot:spring-boot-devtools')

	//embed.mongo should be test scope dependency, but we use it here for development.
	//Never use it in a real prod.
	implementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.1.1')

	testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('io.projectreactor:reactor-test')

	testImplementation('org.junit.jupiter:junit-jupiter-api:5.3.1')
	testCompile('org.junit.jupiter:junit-jupiter-params:5.3.1')
	testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.1')

	testCompile "org.mockito:mockito-core:2.+"
	testCompile('org.mockito:mockito-junit-jupiter:2.23.0') 
}
test {
	maxParallelForks = 1
	testLogging.showStandardStreams = true
	testLogging.exceptionFormat = 'full'
	
	useJUnitPlatform()
}

//compileJava.dependsOn startManagedMongoDb

mongo {
	logging 'console'
	mongoVersion '3.2.2'
}